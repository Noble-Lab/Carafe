package main.java.ai;

import com.compomics.util.experiment.biology.proteins.Peptide;
import com.compomics.util.experiment.identification.matches.IonMatch;
import main.java.dia.LibSpectrum;
import main.java.dia.PeptidePeak;
import org.apache.commons.math3.linear.RealMatrix;
import java.util.ArrayList;
import java.util.HashMap;

public class PeptideMatch {

    public String id = "";

    /**
     * Fragment ion intensities. Raw intensity extracted from MS/MS data.
     */
    public double [][] ion_intensity_matrix;

    /**
     * Fragment ion m/z values.
     */
    public double [][] ion_mz_matrix;


    /**
     * A matrix with the same shape as ion_intensity_matrix, but with 0 and 1.
     * 0 means the ion is valid, 1 or greater means the ion is invalid.
     */
    public int [][] ion_matrix;

    /**
     * The values of the map have the same shape as ion_intensity_matrix, but with 0 and 1.
     * 0 means the ion is valid, 1 or greater means the ion is invalid.
     * This map is used to store the ion_matrix of each peptide for different methods and is only used for testing purpose.
     */
    public HashMap<String,int [][]> ion_matrix_map = new HashMap<>();

    public HashMap<Double, int[]> mz2index = new HashMap<>();

    public LibSpectrum libSpectrum = new LibSpectrum();

    public ArrayList<IonMatch> matched_ions = new ArrayList<>();

    /**
     * The apex scan of the peptide.
     */
    public int scan = -1;

    /**
     * This is the MS2 scan from report.tsv generated by DIA-NN
     */
    public int index = -1;

    public double rt_start = -1;
    public double rt_end = -1;

    public double rt_apex = -1;

    public double max_fragment_ion_intensity = -1;
    public int max_fragment_ion_row_index = -1;
    public int max_fragment_ion_column_index = -1;

    public boolean is_max_fragment_ion_intensity_valid(){
        boolean valid = false;
        if(this.max_fragment_ion_intensity>0){
            if(this.ion_matrix[this.max_fragment_ion_row_index][this.max_fragment_ion_column_index]==0){
                valid = true;
            }
        }
        return valid;
    }


    public PeptidePeak peak = new PeptidePeak();

    public HashMap<Double, Double> mz2cor = new HashMap<>();

    public HashMap<Double, Integer> mz2skewed_peaks = new HashMap<>();

    public double max_cor_mz = -1;

    public int peptide_length = -1;

    public int precursor_charge = -1;
    public Peptide peptide;


    // For XIC
    public RealMatrix smoothed_fragment_intensities = null;
    public double[][] raw_fragment_intensities = new double[1][1];
    public double [] xic_rt_values = new double[1];

    public int [] skewed_peaks = new int[1];

}
